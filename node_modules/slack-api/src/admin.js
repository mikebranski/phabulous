var cheerio = require('cheerio');
var errorFactory = require('error-factory');
var request = require('superagent');
var url = require('url');

var fillForm = require(__dirname + '/../lib/fill-form');
var validateAttributes = require(__dirname + '/../lib/validate-attributes');

var SLACK_URL = 'https://slack.com';


// ## Sign-up
// https://slack.com/signin?email=ustice%40gmail.com&signup=1#signup
//
// * `input[name="signin"]`
// * `input[name="crumb"]`
// * `input[name="redir"]`
// * `input[name="email"]`
// * `#domain`
// * `#submit_team_domain`
//
//
// https://slack.com/go/launch?ef=ustice%40gmail.com&crumb=s-1432149865-c071c5e572-%E2%98%83


admin = {
    getSignupCrumb: function admin_getSignupCrumb (done) {
        request
            .get(SLACK_URL)
            .end(function admin_getSignupCrumb__processHomePage (err, res) {
                var $;
                var crumb;

                if (err) {
                    return done(err, res);
                }

                $ = cheerio.load(res.text);
                crumb = $('input[name="crumb"]').eq(0).val();

                return done(null, crumb);
            })
        ;
    },

    getMagicEmail: function admin_getMagicEmail (options, done) {
        var crumb;
        var email;
        var registrationUrl;

        var requiredAttributes = ['crumb', 'email'];
        if (!validateAttributes(options, requiredAttributes, done)) return;

        crumb = encodeURIComponent(options.crumb);
        email = encodeURIComponent(options.email);

        registrationUrl = SLACK_URL + '/go/launch?ef=' + email + '&crumb=' + crumb;

        console.log(registrationUrl);

        request
            .get(registrationUrl)
            .end(function admin_createGroup__loadCreateAccountPage (err, res) {
                if (err) {
                    return done(err, res);
                };

                return done(null, res.statusCode === 302);
            })
        ;
    },

    getMagicLinkFromEmail : function admin_getMagicLinkFromEmail (emailContents) {
        var linkRegEx = /\b(https:\/\/slack\.com\/create\/\S+)/g;
        var magicLink = emailContents.match(linkRegEx)[0];

        return magicLink;
    },

    confirmEmailFromMagicLink: function admin_confirmEmailFromMagicLink (options, done) {
        var requiredAttributes = ['url', 'slackDomain', 'teamName', 'username', 'password'];
        if (!validateAttributes(options, requiredAttributes, {email: ''}, done)) return;

        // Note that these actually run in opposite order.
        // confirmEmail, fillName, fillDomain, checkDomain, pickName, pickPassword

        var pickPassword = fillForm('#password_form', {password: options.password}, done);
        var pickName = fillForm('#username_form', {username: options.username}, pickPassword);

        var checkDomain = function (err, res) {
            var $ = cheerio.load(res.text);
            var domainError = $('.alert_error').text();

            if (domainError) {
                return done(new Error(domainError));
            }

            return fillForm('#step5form', {}, pickName)(err, res);
        };

        var fillDomain = fillForm('#team_url_form', { url: options.slackDomain}, checkDomain);
        var fillName = fillForm('#team_name_form', { name: options.teamName}, fillDomain);
        var confirmEmail = fillForm('#email_confirm_form', {}, fillName);

        request
            .get(options.url)
            .end(confirmEmail)
        ;
    }
};

// admin.getSignupCrumb(function (err, crumb) {
//     if (err) {
//         return console.error(err);
//     }
//
//     if (crumb) {
//         admin.getMagicEmail({
//             email: 'ustice@gmail.com',
//             crumb: crumb
//         })
//     }
// });

var fs = require('fs');

var emailContents = fs.readFileSync(__dirname + '/../tests/example-email.eml', 'utf8');

var magicLink = admin.getMagicLinkFromEmail(emailContents);

admin.confirmEmailFromMagicLink({
    url: magicLink,
    teamName: 'Ustice Test',
    slackDomain: 'ustice-test-1',
    username: 'fireadmin',
    password: 'This_is_a_terrible_password.'
});
