var _ = require('lodash');

module.exports = function validateAttributes (obj, attrs, defaults, done) {
    var missingAttributes = [];

    if (typeof obj !== 'object') {
        throw new TypeError('Expected first argument to be an object, and got ' + typeof obj, arguments);
    }

    if (!(attrs instanceof Array) && typeof attrs !== 'string') {
        throw new TypeError('Expected second argument to be an array or string, and got ' + typeof obj, arguments);
    }

    if (typeof defaults === 'function' && done === undefined) {
        done = defaults;
        defaults = {};
    }

    done = typeof done === 'function' ? done : function () {};

    attrs = typeof attrs === 'string' ? [attrs] : attrs;

    missingAttributes = _.filter(attrs, function (attr) {
        if (typeof attr !== 'string') {
            throw new TypeError('Required attributes array must only contain strings.');
        }

        return _.isUndefined(obj[attr]);
    });

    console.log('Checking for missing attributes.', missingAttributes);

    if (missingAttributes.length) {
        done(new ReferenceError('Missing the following required attributes: ' + missingAttributes.join(', ') + '.'));
        return false;
    }

    _.defaults(obj, defaults);
    console.log('Totally green');

    return true;
}
